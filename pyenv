#!/bin/bash

#Exit this script if return a non-zero status.
set -e

#Get os distribution
get_os_distribution() {
    os_dist_name=""
    #read os-release info
    if [ -r /etc/os-release ]; then
        os_dist_name="$(. /etc/os-release && echo "$ID")"
    fi
    echo "Current OS dist Name: $os_dist_name"
}

command_exists() {
    command -v "$@" > /dev/null 2>&1
}

verify_root_priv() {
    cmd_ops="sh -c"
    if [ ! $EUID -eq 0 ]; then
    if command_exists sudo; then
            cmd_ops='sudo -E sh -c'
        elif command_exists su; then
            cmd_ops='su -c'
        else
            echo "Please run this script by root privileges."
            exit 1
        fi
    fi
}

installing_error_detection() {
    local command=$1
    local dependence=`echo "${command}" | awk '{print $NF}'`
    ${cmd_ops} "${command}"
    if [ $? != 0 ]; then
        echo "Failed to install: ${dependence}"
        exit 1 
    fi
}

pyenv_installation() {
    UID_NAME=`id $EUID | awk '{print $1}' | awk -F '(' '{print $2}' | awk -F ')' '{print $1}'`
    UID_PATH=`cat /etc/passwd | grep $UID_NAME | awk -F ':' '{print $6}' | uniq`
    git clone git://github.com/yyuu/pyenv.git $UID_PATH/.pyenv
    git clone https://github.com/yyuu/pyenv-virtualenv.git $UID_PATH/.pyenv/plugins/pyenv-virtualenv
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $UID_PATH/.bashrc
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $UID_PATH/.bashrc
    echo 'eval "$(pyenv init -)"' >> $UID_PATH/.bashrc
    echo 'eval "$(pyenv virtualenv-init -)"' >> $UID_PATH/.bashrc
    exec $SHELL
}

packages_installation_configuration() {
    case "$os_dist_name" in
        ubuntu)
            ubuntu_dep=(git gcc openssl libssl-dev)
            for dep in ${ubuntu_dep[@]}; do
                installing_error_detection "apt -y install ${dep}"
            done
            apt update -y -qq > /dev/null
        ;;
        debian)
            debian_dep=(git gcc openssl libssl-dev)
            for dep in ${debian_dep[@]}; do
                installing_error_detection "apt -y install ${dep}"
            done
            apt update -y -qq > /dev/null
        ;;
        centos)
            #Packages dendences
            centos_dep=(git gcc openssl openssl-devel)
            for dep in ${centos_dep[@]}; do
                installing_error_detection "yum -y install ${dep}"
            done
        ;;
    esac
}



main() {
    get_os_distribution
    verify_root_priv
    packages_installation_configuration
    pyenv_installation
}

main